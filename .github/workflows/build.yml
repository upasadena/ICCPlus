name: Build/release

# on:
#   push:
#     branches:
#       - main

on: push

jobs:
  release:
    if: github.ref == 'refs/heads/feature/native-app'
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]

    steps:
      - name: Check out Git repository
        # uses: actions/checkout@v1
        uses: actions/checkout@v4

      - name: Install Node.js, NPM and Yarn
        # uses: actions/setup-node@v1
        uses: actions/setup-node@v4
        with:
          node-version: latest
          # cache: 'yarn'
      
      - name: Install misc dependencies
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt install ruby
          sudo gem install fpm
          export USE_SYSTEM_FPM=true
          export GEM_HOME="$(ruby -e 'puts Gem.user_dir')"
          export PATH="$PATH:$GEM_HOME/bin"
          yarn

      - name: Build/release Electron app
        # uses: samuelmeuli/action-electron-builder@v1
        uses: jsoma/action-electron-forge@v1
        with:
          # GitHub token, automatically provided to the action
          # (No need to define this secret in the repo settings)
          github_token: ${{ secrets.github_token }}

          # If the commit is tagged with a version (e.g. "v1.0.0"),
          # release the app after building
          release: ${{ startsWith(github.ref, 'refs/tags/v') }}

      # - name: Get yarn cache directory path
      #   id: yarn-cache-dir-path
      #   run: echo "::set-output name=dir::$(yarn cache dir)"

      # - uses: actions/cache@v3
      #   id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
      #   with:
      #     path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
      #     key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
      #     restore-keys: |
      #       ${{ runner.os }}-yarn-
